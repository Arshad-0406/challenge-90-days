Internet- long piece of wire

wire which connects different computers with each others

servers- 24/7 online
client- which access the Internet

ex: library- web servers
www.google.com
client-->isp-->dns
isp-internet service provider
dns- domain name system(phone book)
dns will look up in database and provides exact ip address for which u r looking

->direct ip address also u can search

NsLookup.io- website which you can get to ip address

undersea cables- connecting different continents with internet(with optical fibers)

-------------------------------------------

html- for content in website (if website house then bricks of house is html) [text,images,button,links]
css- styling your website
js- allows website to do things (turns static websites in to things with which user can interact)

----------------------------------------------
html:
browsers take different files html, css ,js and create websites

hyper text- piece of text which can link to other documents in an website(hyper links)
markup language-> " "->quotation (markupdone through html tags)

html tags that u need to know

1. Document Structure Tags
<html> – Root element of an HTML page
<head> – Contains meta information, links, scripts
<body> – Contains all visible content

2. Metadata & Links
<title> – Sets the page title
<meta> – Provides metadata like charset, viewport
<link> – Links external resources like CSS
<style> – Internal CSS styles

3. Headings & Text
<h1> to <h6> – Headings, <h1> largest, <h6> smallest
<p> – Paragraph
<strong> – Important text (usually bold)
<em> – Emphasized text (usually italic)
<br> – Line break
<hr> – Horizontal line
<span> – Inline container for text
<div> – Block container for grouping elements

4. Lists
<ul> – Unordered list
<ol> – Ordered list
<li> – List item

5. Links & Media
<a> – Hyperlink
<img> – Image
<iframe> – Inline frame for embedding another page
<embed> – Embed external content (like PDF, video)
<canvas> – Drawing graphics via JavaScript

6. Forms & Input
<form> – Form container
<input> – Input field (text, password, checkbox, etc.)
<textarea> – Multi-line text input
<button> – Button
<label> – Label for form elements
<select> – Dropdown
<option> – Options inside <select>

7. Navigation & Sections
<header> – Page or section header
<footer> – Page or section footer
<nav> – Navigation links
<section> – Section of content

8. Scripts
<script> – JavaScript code

-----------------------------------------------------------
opening tag-<h1>
closing tag-</h1>
<h1>Hello world </h1>

HTML Heading Tags (<h1> to <h6>)
1. What they are

Heading tags are used to define titles and subtitles in an HTML document.

There are six levels of headings: <h1> (largest) to <h6> (smallest).

Example:
<h1>Main Title</h1>
<h2>Subheading</h2>
<h3>Smaller Heading</h3>

2. Characteristics
| Tag    | Size     | Importance              |
| ------ | -------- | ----------------------- |
| `<h1>` | Largest  | Most important heading  |
| `<h2>` | Large    | Second-level heading    |
| `<h3>` | Medium   | Third-level heading     |
| `<h4>` | Small    | Fourth-level heading    |
| `<h5>` | Smaller  | Fifth-level heading     |
| `<h6>` | Smallest | Least important heading |
Visual hierarchy: Users can see the structure of the page by heading size.

Semantic meaning: Search engines and screen readers understand the page structure through headings.

3. Best Practices

Use headings in order: <h1> → <h2> → <h3> …

One <h1> per page: Represents the main title.

Use headings for structure, not style: Don’t use headings just to make text bigger—use CSS for styling.

SEO-friendly: Headings help search engines understand your content hierarchy.

